// <auto-generated />
using System;
using Aibu.InternshipAutomation.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aibu.InternshipAutomation.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241025161534_mig61")]
    partial class mig61
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AcceptanceStatuss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptanceStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AcceptanceStatus");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.ApplicantStudentsViews", b =>
                {
                    b.Property<int>("AcceptanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInternship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("ApplicantStudentsView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedDepartments", b =>
                {
                    b.Property<int>("AuthorizedPersonId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AuthorizedPersonId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthorizedDepartments");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedPersonDepartmentViews", b =>
                {
                    b.Property<int>("AuthorizedPersonId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("AuthorizedPersonDepartmentView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedPersons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthorizedPerson");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedUbyss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthorizedUbys");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedViews", b =>
                {
                    b.Property<int>("AcceptanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DogumYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntershipEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntershipStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("StudentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInternship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.ToTable((string)null);

                    b.ToView("AuthorizedView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.CompanyInfoViews", b =>
                {
                    b.Property<string>("ActivityArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllDayWorkingOnWeekends")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsComputerEngineer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIt")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSoftwareEngineer")
                        .HasColumnType("bit");

                    b.Property<string>("MissionArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNumberOfEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("CompanyInfoView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.CompanyUserss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllDayWorkingOnWeekends")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChemicalEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCivilEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsComputerEngineer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsElectricalElectronicsEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnvironmentalEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFoodEngineering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMechanicalEngineering")
                        .HasColumnType("bit");

                    b.Property<string>("MissionArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNumberOfEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("CompanyUsers");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.InternPeriods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeOfInternship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InternPeriod");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.InternTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InternTypes");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.PastInternShipViews", b =>
                {
                    b.Property<int>("AcceptanceStatus")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("IntershipEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntershipStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfInternship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("PastInternShipView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.RoleViews", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("RoleView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.StateViews", b =>
                {
                    b.Property<int>("AcceptanceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("StateView", (string)null);
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptanceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BolumBaskanıUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BolumSekreteriUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<short>("Class")
                        .HasColumnType("smallint");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FakulteSekreteriUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageMimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InTermFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InternPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("InternTypesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IntershipEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IntershipStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Isg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceOfBirthId")
                        .HasColumnType("int");

                    b.Property<string>("Provuzyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SirketUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StajKomisyonUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StudentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcceptanceStatusId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("InternPeriodId");

                    b.HasIndex("InternTypesId");

                    b.HasIndex("PlaceOfBirthId");

                    b.HasIndex("StateId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Ubyss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Ubys");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Userss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedDepartments", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.AuthorizedPersons", "AuthorizedPerson")
                        .WithMany("AuthorizedDepartments")
                        .HasForeignKey("AuthorizedPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Departments", "Department")
                        .WithMany("AuthorizedDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizedPerson");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedPersons", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.CompanyUserss", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Roles", "Role")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.States", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Roles", "Role")
                        .WithMany("States")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Students", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.AcceptanceStatuss", "AcceptanceStatus")
                        .WithMany("Students")
                        .HasForeignKey("AcceptanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Departments", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.InternPeriods", "InternPeriod")
                        .WithMany("Students")
                        .HasForeignKey("InternPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.InternTypes", "InternTypes")
                        .WithMany("Students")
                        .HasForeignKey("InternTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Cities", "PlaceOfBirth")
                        .WithMany("Students")
                        .HasForeignKey("PlaceOfBirthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.States", "State")
                        .WithMany("Students")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcceptanceStatus");

                    b.Navigation("Department");

                    b.Navigation("InternPeriod");

                    b.Navigation("InternTypes");

                    b.Navigation("PlaceOfBirth");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Ubyss", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Departments", "Department")
                        .WithMany("Ubyss")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Userss", b =>
                {
                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Departments", "Department")
                        .WithMany("Userss")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aibu.InternshipAutomation.Data.Entities.Roles", "Role")
                        .WithMany("Userss")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AcceptanceStatuss", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.AuthorizedPersons", b =>
                {
                    b.Navigation("AuthorizedDepartments");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Cities", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Departments", b =>
                {
                    b.Navigation("AuthorizedDepartments");

                    b.Navigation("Students");

                    b.Navigation("Ubyss");

                    b.Navigation("Userss");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.InternPeriods", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.InternTypes", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.Roles", b =>
                {
                    b.Navigation("CompanyUsers");

                    b.Navigation("States");

                    b.Navigation("Userss");
                });

            modelBuilder.Entity("Aibu.InternshipAutomation.Data.Entities.States", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
